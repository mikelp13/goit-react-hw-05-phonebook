{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/AppStyled.js","components/notification/NotificationStyled.js","components/notification/Notification.js","components/App.js","index.js"],"names":["Form","styled","form","Input","input","Button","button","initialState","name","number","ContactForm","onAddContact","useState","state","setState","handleChange","e","target","value","prevState","onSubmit","preventDefault","type","placeholder","onChange","Wrapper","div","DelButton","ContactListItem","contact","id","onDeleteContact","data-id","onClick","ContactList","contacts","TransitionGroup","component","map","CSSTransition","timeout","classNames","FilterWrapper","FilterInput","Filter","onChangeFilter","Container","NotifWrap","Notification","message","filter","alert","App","useEffect","storageContacts","localStorage","getItem","JSON","parse","setItem","stringify","in","appear","unmountOnExit","uuidv4","alertMessage","some","cont","toLowerCase","length","includes","getFilteredContacts","contactId","dataset","onEntered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2b9aab8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  margin: 30px 0;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  margin: 5px 0 20px 0;\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  outline-color: #3645ab;\r\n\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    color: #d8d8d8;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  background-color: #3645ab;\r\n\r\n  â€ƒ &:hover {\r\n    background-color: #273aba;\r\n    color: white;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input, Button } from \"./ContactFormStyled\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({onAddContact}) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState)=> ({...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n   onAddContact(name, number);\r\n    setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={state.name}\r\n          placeholder=\"Enter your name\"\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </label>\r\n      <label>\r\n        Number\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={state.number}\r\n          placeholder=\"123-45-678\"\r\n          onChange={handleChange}\r\n        ></Input>\r\n      </label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactForm;\r\n\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    background-color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: 3px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  .ContactList-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .ContactList-item-enter-active {\r\n    opacity: 1;\r\n    transform:translateX(0);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .ContactList-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .ContactList-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n`;\r\n\r\nexport const DelButton = styled(Button)`\r\n  width:35px;\r\n  height:35px;\r\n  font-size: 20px;\r\n  background-color:#F1392D;\r\n  line-height: 17px;\r\n\r\n  &:hover{\r\n    background-color:#d71b0e\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport {DelButton} from \"../ContactListStyled\"\r\n\r\nconst ContactListItem = ({ contact:{id, name, number}, onDeleteContact}) => (\r\n  <li>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <DelButton type=\"button\" data-id={id} onClick={onDeleteContact}>&times;</DelButton>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Wrapper } from \"./ContactListStyled\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <Wrapper>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((contact) => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames=\"ContactList-item\">\r\n            <ContactListItem\r\n              contact={contact}\r\n              onDeleteContact={onDeleteContact}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\nimport { Input } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin: 0 0 30px ;\r\n  padding: 5px 20px 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const FilterInput = styled(Input)`\r\n  margin: 5px 0 0;\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\nimport { FilterWrapper, FilterInput} from \"./FilterStyled\"\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Find contacts by name\r\n      <FilterInput\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\"Search...\"\r\n      ></FilterInput>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 50%;\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    color: #3645ab;\r\n  }\r\n\r\n  .phonebook-title-appear {\r\n    transform: translateX(-100%);\r\n  }\r\n  .phonebook-title-appear-active {\r\n    transform: translateX(0);\r\n    transition: transform 500ms linear;\r\n  }\r\n\r\n\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n    transition: all 500ms linear;\r\n  }\r\n\r\n  .filter-exit {\r\n    opacity: 1;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: scale(0);\r\n    transition: all 500ms linear;\r\n  }\r\n\r\n\r\n  .Notification-enter {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .Notification-enter-active {\r\n    transform: translateX(0);\r\n    transition: transform 250ms linear;\r\n  }\r\n\r\n  .Notification-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .Notification-exit-active {\r\n    transform: translateX(300%);\r\n    transition: transform 250ms linear;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotifWrap = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  background-color: #F1392D;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  padding: 20px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius:5px;\r\n`;\r\n","import React from \"react\";\r\nimport { NotifWrap } from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <NotifWrap>\r\n    <p>{message}</p>\r\n  </NotifWrap>\r\n);\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport { Container } from \"./AppStyled\";\nimport Notification from \"./notification/Notification\";\n\nconst initialState = {\n  contacts: [],\n  filter: \"\",\n  alert: false,\n};\n\nconst App = () => {\n  const [state, setState] = useState({ ...initialState });\n\n  useEffect(() => {\n    const storageContacts = localStorage.getItem(\"contacts\");\n    storageContacts &&\n      setState((prevState) => ({\n        ...prevState,\n        contacts: JSON.parse(storageContacts),\n      }));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  const changeFilter = (e) => {\n    const { value } = e.target;\n    setState((prevState) => ({ ...prevState, filter: value }));\n  };\n\n  const getFilteredContacts = () => {\n    const { contacts, filter } = state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const addContact = (name, number) => {\n    const { contacts } = state;\n    const contact = { id: uuidv4(), name, number };\n    if (!name || !number) {\n      return setState((prevState) => ({\n        ...prevState,\n        alert: true,\n        alertMessage: \"Please enter some contact information.\",\n      }));\n    }\n \n    contacts.some((cont) => cont.name.toLowerCase() === name.toLowerCase())\n      ? setState((prevState) => ({\n        ...prevState,\n        alert: true,\n        alertMessage: `${name} is already in contacts!`,\n      }))\n      : setState((prevState) => ({\n          ...prevState,\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  const deleteContact = (e) => {\n    const contactId = e.target.dataset.id;\n    setState((prevState) => ({\n      ...prevState,\n      contacts: [...prevState.contacts.filter(({ id }) => id !== contactId)],\n      filter: \"\",\n    }));\n  };\n\n  const handleNotificationExit = () =>\n    setState((prevState) => ({ ...prevState, alert: false }));\n\n  return (\n    <Container>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"phonebook-title\"\n        timeout={500}\n        unmountOnExit\n      >\n        <h1>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm onAddContact={addContact} />\n\n      <CSSTransition\n        in={state.contacts.length > 1}\n        classNames=\"filter\"\n        timeout={500}\n        unmountOnExit\n      >\n        <Filter value={state.filter} onChangeFilter={changeFilter} />\n      </CSSTransition>\n\n      <ContactList\n        contacts={getFilteredContacts()}\n        onDeleteContact={deleteContact}\n      />\n\n      {!state.contacts.length && <p>There are no contacts in current list.</p>}\n      <CSSTransition\n        in={state.alert}\n        classNames=\"Notification\"\n        onEntered={handleNotificationExit}\n        timeout={3000}\n        unmountOnExit\n      >\n        <Notification message={state.alertMessage} />\n      </CSSTransition>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\n ReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}